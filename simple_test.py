#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç WhatsApp –±–æ—Ç–∞ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

class SimpleDatingBot:
    def __init__(self):
        self.welcome_messages = [
            "–ü—Ä–∏–≤–µ—Ç, –∫—Ä–∞—Å–∞–≤—á–∏–∫! üòä –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –Ω–∞–π—Ç–∏ –ª—é–±–æ–≤—å –Ω–∞ BeHappy2Day! –†–∞—Å—Å–∫–∞–∂–∏, –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
            "–û–π, –ø—Ä–∏–≤–µ—Ç! üíï –ì–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º–∏ –¥–µ–≤—É—à–∫–∞–º–∏! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
            "–ü—Ä–∏–≤–µ—Ç, –º–∏–ª—ã–π! üåπ –•–æ—á–µ—à—å –Ω–∞–π—Ç–∏ —Å–≤–æ—é –≤—Ç–æ—Ä—É—é –ø–æ–ª–æ–≤–∏–Ω–∫—É? –ù–∞—á–Ω–µ–º —Å —Ç–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏!"
        ]
        
        self.questions = {
            'name': "–û—Ç–ª–∏—á–Ω–æ! –ê —Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç?",
            'age': "–ö—Ä—É—Ç–æ! –ò–∑ –∫–∞–∫–æ–π —Ç—ã —Å—Ç—Ä–∞–Ω—ã?",
            'country': "–ß—Ç–æ —Ç—ã –∏—â–µ—à—å –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö? –°–µ—Ä—å–µ–∑–Ω—ã–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –æ–±—â–µ–Ω–∏–µ?",
            'relationship_goal': "–ü–æ–Ω—è—Ç–Ω–æ! –£ —Ç–µ–±—è –µ—Å—Ç—å –¥–µ—Ç–∏?",
            'children': "–û—Ç–ª–∏—á–Ω–æ! –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–æ–ø—Ä–æ—Å - –Ω–∞ –∫–∞–∫–æ–º —è–∑—ã–∫–µ —Ç—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—à—å –æ–±—â–∞—Ç—å—Å—è?",
            'language': "–°—É–ø–µ—Ä! –°–µ–π—á–∞—Å —è —Å–æ–∑–¥–∞–º —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞ BeHappy2Day! üíï"
        }
        
        self.violations = [
            'phone', 'email', '@', 'whatsapp', 'telegram', 'instagram', 'facebook',
            'girl', 'minor', 'child', 'teen', 'money', 'gift', 'pay', 'send',
            'politics', 'government', 'election', 'rude', 'fuck', 'shit'
        ]
        
        self.user_states = {}

    def check_violations(self, message):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª"""
        message_lower = message.lower()
        violations = []
        
        for violation in self.violations:
            if violation in message_lower:
                violations.append(violation)
        
        return violations

    def get_response(self, user_id, message):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞"""
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è
        violations = self.check_violations(message)
        if violations:
            return self.handle_violation(violations)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        state = self.user_states.get(user_id, {})
        current_step = state.get('step', 'welcome')
        
        if current_step == 'welcome':
            return self.handle_welcome(user_id, message)
        elif current_step == 'name':
            return self.handle_name(user_id, message)
        elif current_step == 'age':
            return self.handle_age(user_id, message)
        elif current_step == 'country':
            return self.handle_country(user_id, message)
        elif current_step == 'relationship_goal':
            return self.handle_relationship_goal(user_id, message)
        elif current_step == 'children':
            return self.handle_children(user_id, message)
        elif current_step == 'language':
            return self.handle_language(user_id, message)
        else:
            return self.handle_completion(user_id, message)

    def handle_violation(self, violations):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–π"""
        violation_messages = {
            'phone': "–ò–∑–≤–∏–Ω–∏, –Ω–æ —è –Ω–µ –º–æ–≥—É –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–∞ —Å–∞–π—Ç–∞! üòä",
            'email': "–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ª–∏—á–Ω–æ–π –≤—Å—Ç—Ä–µ—á–µ! üíï",
            'money': "–Ø –Ω–µ –ø—Ä–æ—à—É –¥–µ–Ω–µ–≥ –∏ –ø–æ–¥–∞—Ä–∫–æ–≤! –î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è —á–µ—Å—Ç–Ω–æ! üòò",
            'minor': "–û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏—Ö –∑–∞–ø—Ä–µ—â–µ–Ω–æ! –î–∞–≤–∞–π –≤–µ—Ä–Ω–µ–º—Å—è –∫ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞–º! üíï",
            'gift': "–Ø –Ω–µ –ø—Ä–æ—à—É –ø–æ–¥–∞—Ä–∫–æ–≤! –î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è —á–µ—Å—Ç–Ω–æ! üòò",
            'pay': "–Ø –Ω–µ –ø—Ä–æ—à—É –¥–µ–Ω–µ–≥! –î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è —á–µ—Å—Ç–Ω–æ! üòò",
            'fuck': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ! üòä",
            'shit': "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—â–∞–π—Å—è –≤–µ–∂–ª–∏–≤–æ! üòä"
        }
        
        for violation in violations:
            if violation in violation_messages:
                return violation_messages[violation]
        
        return "–ò–∑–≤–∏–Ω–∏, –Ω–æ —ç—Ç–æ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ —Å–∞–π—Ç–∞! –î–∞–≤–∞–π –æ–±—â–∞—Ç—å—Å—è –≤–µ–∂–ª–∏–≤–æ! üòä"

    def handle_welcome(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        self.user_states[user_id] = {
            'step': 'name',
            'data': {}
        }
        return self.questions['name']

    def handle_name(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–º–µ–Ω–∏"""
        self.user_states[user_id]['data']['name'] = message
        self.user_states[user_id]['step'] = 'age'
        return self.questions['age']

    def handle_age(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞"""
        try:
            age = int(message)
            if age < 18:
                return "–ò–∑–≤–∏–Ω–∏, –Ω–æ —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 18+ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏! üòä"
            self.user_states[user_id]['data']['age'] = age
            self.user_states[user_id]['step'] = 'country'
            return self.questions['country']
        except ValueError:
            return "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç —Ü–∏—Ñ—Ä–∞–º–∏! üòä"

    def handle_country(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω—ã"""
        self.user_states[user_id]['data']['country'] = message
        self.user_states[user_id]['step'] = 'relationship_goal'
        return self.questions['relationship_goal']

    def handle_relationship_goal(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ü–µ–ª–µ–π –æ—Ç–Ω–æ—à–µ–Ω–∏–π"""
        self.user_states[user_id]['data']['relationship_goal'] = message
        self.user_states[user_id]['step'] = 'children'
        return self.questions['children']

    def handle_children(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –¥–µ—Ç—è—Ö"""
        self.user_states[user_id]['data']['children'] = message
        self.user_states[user_id]['step'] = 'language'
        return self.questions['language']

    def handle_language(self, user_id, message):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —è–∑—ã–∫–∞ –æ–±—â–µ–Ω–∏—è"""
        self.user_states[user_id]['data']['language'] = message
        self.user_states[user_id]['step'] = 'completed'
        return self.handle_completion(user_id, message)

    def handle_completion(self, user_id, message):
        """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
        user_data = self.user_states[user_id]['data']
        
        completion_message = f"""
–û—Ç–ª–∏—á–Ω–æ, {user_data.get('name', '–º–∏–ª—ã–π')}! üíï

–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω! –í–æ—Ç —Ç–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:
‚Ä¢ –ò–º—è: {user_data.get('name')}
‚Ä¢ –í–æ–∑—Ä–∞—Å—Ç: {user_data.get('age')}
‚Ä¢ –°—Ç—Ä–∞–Ω–∞: {user_data.get('country')}
‚Ä¢ –¶–µ–ª—å: {user_data.get('relationship_goal')}
‚Ä¢ –î–µ—Ç–∏: {user_data.get('children')}
‚Ä¢ –Ø–∑—ã–∫: {user_data.get('language')}

–°–∫–æ—Ä–æ —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ BeHappy2Day! 

–°–∞–π—Ç: https://behappy2day.com
–ü–æ–¥–¥–µ—Ä–∂–∫–∞: polovinka@behappy2day.com

–£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö –ª—é–±–≤–∏! üíã
        """
        
        # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        if user_id in self.user_states:
            del self.user_states[user_id]
        
        return completion_message.strip()

def test_bot():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞"""
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WhatsApp –±–æ—Ç–∞ –¥–ª—è BeHappy2Day")
    print("=" * 50)
    
    bot = SimpleDatingBot()
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∏–∞–ª–æ–≥–∏
    test_conversations = [
        {
            "name": "–ù–æ—Ä–º–∞–ª—å–Ω—ã–π –¥–∏–∞–ª–æ–≥",
            "messages": [
                "–ü—Ä–∏–≤–µ—Ç",
                "–ú–∏—Ö–∞–∏–ª",
                "25",
                "–†–æ—Å—Å–∏—è",
                "–°–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è",
                "–ù–µ—Ç",
                "–†—É—Å—Å–∫–∏–π"
            ]
        },
        {
            "name": "–ù–∞—Ä—É—à–µ–Ω–∏–µ - –ø–µ—Ä–µ–¥–∞—á–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤",
            "messages": [
                "–ü—Ä–∏–≤–µ—Ç",
                "–ú–∏—Ö–∞–∏–ª",
                "25",
                "–ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω +7-999-123-45-67"
            ]
        },
        {
            "name": "–ù–∞—Ä—É—à–µ–Ω–∏–µ - –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ",
            "messages": [
                "–ü—Ä–∏–≤–µ—Ç",
                "–ê–Ω–Ω–∞",
                "16",
                "–†–æ—Å—Å–∏—è"
            ]
        },
        {
            "name": "–ù–∞—Ä—É—à–µ–Ω–∏–µ - –ø—Ä–æ—Å—å–±–∞ –¥–µ–Ω–µ–≥",
            "messages": [
                "–ü—Ä–∏–≤–µ—Ç",
                "–ò–≤–∞–Ω",
                "30",
                "–ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –¥–µ–Ω—å–≥–∏?"
            ]
        }
    ]
    
    for conversation in test_conversations:
        print(f"\nüì± –¢–µ—Å—Ç: {conversation['name']}")
        print("-" * 30)
        
        user_id = f"test_user_{conversation['name'].replace(' ', '_').lower()}"
        
        for i, message in enumerate(conversation['messages']):
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message}")
            
            response = bot.get_response(user_id, message)
            print(f"ü§ñ –ë–æ—Ç: {response}")
            print()
            
            # –ï—Å–ª–∏ –±–æ—Ç –æ–±–Ω–∞—Ä—É–∂–∏–ª –Ω–∞—Ä—É—à–µ–Ω–∏–µ, –ø—Ä–µ—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
            if any(violation in response.lower() for violation in ['–Ω–∞—Ä—É—à–∞–µ—Ç', '–∑–∞–ø—Ä–µ—â–µ–Ω–æ', '–Ω–µ –º–æ–≥—É', '–ø—Ä–∞–≤–∏–ª–∞ —Å–∞–π—Ç–∞']):
                print("üö´ –î–∏–∞–ª–æ–≥ –ø—Ä–µ—Ä–≤–∞–Ω –∏–∑-–∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª")
                break

def test_violations():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π"""
    print("\nüõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π")
    print("=" * 50)
    
    bot = SimpleDatingBot()
    
    test_messages = [
        ("–ü—Ä–∏–≤–µ—Ç, –º–æ–π email: test@example.com", "email"),
        ("–ú–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω: +7-999-123-45-67", "phone"),
        ("–•–æ—á—É –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –¥–µ–≤–æ—á–∫–æ–π 15 –ª–µ—Ç", "minor"),
        ("–ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –º–Ω–µ –ø–æ–¥–∞—Ä–æ–∫?", "gift"),
        ("–û—Ç–ø—Ä–∞–≤—å –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É", "money"),
        ("–ü–æ–ª–∏—Ç–∏–∫–∞ - —ç—Ç–æ –≤–∞–∂–Ω–æ", "politics"),
        ("Fuck you!", "rude"),
        ("–û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –Ω–∞—Ä—É—à–µ–Ω–∏–π", None)
    ]
    
    for message, expected_violation in test_messages:
        violations = bot.check_violations(message)
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: {violations}")
        print(f"‚úÖ –û–∂–∏–¥–∞–µ–º–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ: {expected_violation}")
        print()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ WhatsApp –±–æ—Ç–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
    test_bot()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–π
    test_violations()
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å Twilio:")
    print("   1. pip install -r requirements.txt")
    print("   2. python app.py")
    print("   3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Twilio webhook") 